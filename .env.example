# Environment (development, production, etc.)
NODE_ENV=

# Database configuration
DB_USERNAME=        # Username for the database connection
DB_PASSWORD=        # Password for the database user
DB_NAME=            # Name of the database to connect to
DB_HOST=            # Database server host (e.g., localhost or remote server)
DB_PORT=            # Port number for the database (default: 3306 for MySQL)

# SSL configuration for MySQL (optional for secure connections)
MYSQL_SSL_CA=       # Path to the Certificate Authority file
MYSQL_SSL_CERT=     # Path to the SSL certificate file
MYSQL_SSL_KEY=      # Path to the SSL key file

# AWS S3 Configuration
AWS_ACCESS_KEY_ID=         # Access key for AWS account
AWS_SECRET_ACCESS_KEY=     # Secret access key for AWS account
AWS_FILE_BUCKET=           # Name of the S3 bucket for storing files
AWS_REGION=                # AWS region where the S3 bucket is located

# JWT (JSON Web Token) secrets for authentication
JWT_SECRET=                # Secret key for signing JWT access tokens
JWT_REFRESH_SECRET=        # Secret key for signing JWT refresh tokens

## JWT hashing
SALT_ROUNDS=               # Number of hashing rounds for password encryption (e.g., 10)

# Port for the Node.js server
PORT=                      # The port that the Node server will use (e.g., 3000)

# EC2 Server Configuration
SERVER_IP=                 # Public IP address of the EC2 instance

# Cookie settings
COOKIE_SECRET=             # Secret key for encrypting and signing cookies

# CloudFront CDN configuration
CLOUDFRONT_BASE_URL=       # Base URL for accessing CloudFront-distributed content
CLOUDFRONT_KEY_PAIR_ID=    # Key pair ID for signed CloudFront URLs
CLOUDFRONT_PRIVATE_KEY=    # Private key for CloudFront signed URL generation

# Revalidation settings for Next.js (Must match the one set on the client)
REVALIDATION_SECRET=       # Secret key for triggering ISR (Incremental Static Regeneration) revalidation

# Next.js API configuration
NEXT_JS_API_URL=           # URL endpoint for Next.js API routes (e.g., /api)
NEXT_JS_URL=               # Main URL for the Next.js application

# Users (Default user accounts for initial setup), you should add exactly 4
# users otherwise the users seed will not work, first use will be assigned the
# admin role
USERS='                    # JSON array of 4 default users with name, email, and password to seed the users table
[
    {
        "name": "test",
        "email": "test@500words.com",
        "password": "test1pass"
    },
    {
        "name": "test2",
        "email": "test2@500words.com",
        "password": "test2pass"
    },
    {
        "name": "test3",
        "email": "test3@500words.com",
        "password": "test3pass"
    },
    {
        "name": "test4",
        "email": "test4@500words.com",
        "password": "test4pass"
    }
]
